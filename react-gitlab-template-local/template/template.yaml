apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: gitlab-demo
  title: Gitlab DEMO 2
  description: Scaffolder GitLab Demo
spec:
  owner: backstage/techdocs-core
  type: service

  parameters:
    - title: Fill in service info
      required:
        - name
        - group
        - repo
      properties:
        name:
          title: Project Name
          type: string
          description: Tên project (hiển thị)

        group:
          title: GitLab Group Name
          type: string
          description: Tên namespace/group trong GitLab đã tồn tại và bạn có quyền (ví dụ: `thanghumg113-group`)

        repo:
          title: Repository Name
          type: string
          description: Tên repo sẽ được tạo trong group

  steps:
    - id: checkGroup
      name: Check if GitLab Group exists
      action: gitlab:group:checkExists
      input:
        group: ${{ parameters.group }}

    - id: checkRepo
      name: Check if Repository already exists
      action: gitlab:project:checkExists
      input:
        repoUrl: gitlab.com?owner=${{ parameters.group }}&repo=${{ parameters.repo }}

    - id: fetch
      name: Fetch local source
      action: fetch:plain
      input:
        url: ./code

    - id: publish
      name: Publish
      action: publish:gitlab
      input:
        description: This is ${{ parameters.name }}
        repoUrl: gitlab.com?owner=${{ parameters.group }}&repo=${{ parameters.repo }}
        sourcePath: pimcore
        defaultBranch: main

    - id: gitlab-deploy-token
      name: Create Deploy Token
      action: gitlab:projectDeployToken:create
      input:
        repoUrl: gitlab.com?owner=${{ parameters.group }}&repo=${{ parameters.repo }}
        projectId: "${{ steps['publish'].output.projectId }}"
        name: ${{ parameters.name }}-secret
        username: ${{ parameters.name }}-secret
        scopes: ['read_registry']

    - id: gitlab-project-variable
      name: Gitlab Project Variable
      action: gitlab:projectVariable:create
      input:
        repoUrl: gitlab.com?owner=${{ parameters.group }}&repo=${{ parameters.repo }}
        projectId: "${{ steps['publish'].output.projectId }}"
        key: 'VARIABLE_NAME'
        value: "${{ steps['gitlab-deploy-token'].output.token }}"
        variableType: 'env_var'
        masked: true
        variableProtected: false
        raw: false
        environmentScope: '*'

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps['publish'].output.repoContentsUrl }}
        catalogInfoPath: '/catalog-info.yaml'

  output:
    links:
      - title: Repository
        url: ${{ steps['publish'].output.remoteUrl }}
