apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: create-react-app-gitlab
  title: Create React App on GitLab 4
  description: Scaffold and publish a GitLab project
  tags:
    - react
    - gitlab
spec:
  owner: web@example.com
  type: website

  parameters:
    - title: Provide some simple information
      required:
        - component_id
        - owner
        - repoUrl
      properties:
        component_id:
          title: Name
          type: string
          description: Unique name of the component
          ui:field: EntityNamePicker
        description:
          title: Description
          type: string
          description: Help others understand what this website is for.
        owner:
          title: Owner
          type: string
          description: Owner of the component
          ui:field: OwnerPicker
          ui:options:
            allowedKinds:
              - Group
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - gitlab.com

  steps:
    - id: template
      name: Fetch Skeleton + Template
      action: fetch:template
      input:
        url: ./code
        values:
          component_id: ${{ parameters.component_id }}
          description: ${{ parameters.description }}
          destination: ${{ parameters.repoUrl | parseRepoUrl }}
          owner: ${{ parameters.owner }}

    - id: publish
      name: Publish to GitLab
      action: publish:gitlab
      input:
        repoUrl: ${{ parameters.repoUrl }}

    - id: create-kubernetes-namespace
      name: Create Kubernetes Namespace
      action: kubernetes:create-namespace
      input:
        namespace: ${{ parameters.component_id }}
        url: https://rancher-local.jitsinnovationlabs.com/k8s/clusters/c-gt2kd
        token: kubeconfig-u-rsg92v7ttc:zdwl4bzkzwxggn6tslzl7j8bv54t9cvp7crmc8sztjlns9xxqpdt6p
        skipTLSVerify: true
        labels: "backstage.io/kubernetes-id=${{ parameters.component_id }}"

    - id: create-deployment
      name: Create Deployment
      action: kubernetes:apply
      input:
        url: https://rancher-local.jitsinnovationlabs.com/k8s/clusters/c-gt2kd
        token: kubeconfig-u-rsg92v7ttc:zdwl4bzkzwxggn6tslzl7j8bv54t9cvp7crmc8sztjlns9xxqpdt6p
        skipTLSVerify: true
        namespace: ${{ parameters.component_id }}
        manifests:
          - apiVersion: apps/v1
            kind: Deployment
            metadata:
              name: ${{ parameters.component_id }}
              labels:
                app: ${{ parameters.component_id }}
                backstage.io/kubernetes-id: ${{ parameters.component_id }}
            spec:
              replicas: 1
              selector:
                matchLabels:
                  app: ${{ parameters.component_id }}
              template:
                metadata:
                  labels:
                    app: ${{ parameters.component_id }}
                    backstage.io/kubernetes-id: ${{ parameters.component_id }}
                spec:
                  containers:
                    - name: app
                      image: nginx:latest
                      ports:
                        - containerPort: 80

    - id: create-service
      name: Create Service
      action: kubernetes:apply
      input:
        url: https://rancher-local.jitsinnovationlabs.com/k8s/clusters/c-gt2kd
        token: kubeconfig-u-rsg92v7ttc:zdwl4bzkzwxggn6tslzl7j8bv54t9cvp7crmc8sztjlns9xxqpdt6p
        skipTLSVerify: true
        namespace: ${{ parameters.component_id }}
        manifests:
          - apiVersion: v1
            kind: Service
            metadata:
              name: ${{ parameters.component_id }}
              labels:
                backstage.io/kubernetes-id: ${{ parameters.component_id }}
            spec:
              selector:
                app: ${{ parameters.component_id }}
              ports:
                - protocol: TCP
                  port: 80
                  targetPort: 80

    - id: create-ingress
      name: Create Ingress
      action: kubernetes:apply
      input:
        url: https://rancher-local.jitsinnovationlabs.com/k8s/clusters/c-gt2kd
        token: kubeconfig-u-rsg92v7ttc:zdwl4bzkzwxggn6tslzl7j8bv54t9cvp7crmc8sztjlns9xxqpdt6p
        skipTLSVerify: true
        namespace: ${{ parameters.component_id }}
        manifests:
          - apiVersion: networking.k8s.io/v1
            kind: Ingress
            metadata:
              name: ${{ parameters.component_id }}-ingress
              labels:
                backstage.io/kubernetes-id: ${{ parameters.component_id }}
            spec:
              rules:
                - host: ${{ parameters.component_id }}.example.com
                  http:
                    paths:
                      - path: /
                        pathType: Prefix
                        backend:
                          service:
                            name: ${{ parameters.component_id }}
                            port:
                              number: 80

    - id: register
      name: Register to Backstage
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: "/catalog-info.yaml"

  output:
    links:
      - title: Repository
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}
